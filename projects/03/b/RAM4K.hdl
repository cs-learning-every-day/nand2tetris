// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[9..11], a=l8, b=l7, c=l6, d=l5, e=l4, f=l3, g=l2, h=l1);

    RAM512(in=in, load=l1, address=address[0..8], out=o1);
    RAM512(in=in, load=l2, address=address[0..8], out=o2);
    RAM512(in=in, load=l3, address=address[0..8], out=o3);
    RAM512(in=in, load=l4, address=address[0..8], out=o4);
    RAM512(in=in, load=l5, address=address[0..8], out=o5);
    RAM512(in=in, load=l6, address=address[0..8], out=o6);
    RAM512(in=in, load=l7, address=address[0..8], out=o7);
    RAM512(in=in, load=l8, address=address[0..8], out=o8);

    Mux8Way16(a=o8, b=o7, c=o6, d=o5, e=o4, f=o3, g=o2, h=o1, sel=address[9..11], out=out);
}